{"ast":null,"code":"var _jsxFileName = \"/home/elvis/phase3/my-app-frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CreateTask from './componentsmodals/CreateTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = _ref => {\n  _s();\n  let {\n    tasks\n  } = _ref;\n  const [completed, setCompleted] = useState(false);\n  const [dueDate, setDueDate] = useState('');\n  const handleCompletionFilter = event => {\n    setCompleted(event.target.checked);\n  };\n  const handleDueDateFilter = event => {\n    setDueDate(event.target.value);\n  };\n  const filteredTasks = tasks.filter(task => {\n    let isCompleted = true;\n    let isDueDateMatched = true;\n    if (completed) {\n      isCompleted = task.completed === completed;\n    }\n    if (dueDate) {\n      isDueDateMatched = task.dueDate === dueDate;\n    }\n    return isCompleted && isDueDateMatched;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Completed:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: completed,\n          onChange: handleCompletionFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Due Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dueDate,\n          onChange: handleDueDateFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(CreateTask, {\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"zRWJevabqMKc/kA/rdPSSOOg5is=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","CreateTask","TaskList","tasks","completed","setCompleted","dueDate","setDueDate","handleCompletionFilter","event","target","checked","handleDueDateFilter","value","filteredTasks","filter","task","isCompleted","isDueDateMatched","map","id"],"sources":["/home/elvis/phase3/my-app-frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CreateTask from './componentsmodals/CreateTask';\n\nconst TaskList = ({ tasks }) => {\n  const [completed, setCompleted] = useState(false);\n  const [dueDate, setDueDate] = useState('');\n\n  const handleCompletionFilter = (event) => {\n    setCompleted(event.target.checked);\n  };\n\n  const handleDueDateFilter = (event) => {\n    setDueDate(event.target.value);\n  };\n\n  const filteredTasks = tasks.filter((task) => {\n    let isCompleted = true;\n    let isDueDateMatched = true;\n\n    if (completed) {\n      isCompleted = task.completed === completed;\n    }\n\n    if (dueDate) {\n      isDueDateMatched = task.dueDate === dueDate;\n    }\n\n    return isCompleted && isDueDateMatched;\n  });\n\n  return (\n    <div>\n      <h2>Task List</h2>\n      <div>\n        <label>\n          Completed:\n          <input type=\"checkbox\" checked={completed} onChange={handleCompletionFilter} />\n        </label>\n        <label>\n          Due Date:\n          <input type=\"date\" value={dueDate} onChange={handleDueDateFilter} />\n        </label>\n      </div>\n      <ul>\n        {filteredTasks.map((task) => (\n          <CreateTask key={task.id} task={task} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,+BAA+B;AAAC;AAEvD,MAAMC,QAAQ,GAAG,QAAe;EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,sBAAsB,GAAIC,KAAK,IAAK;IACxCJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC;EACpC,CAAC;EAED,MAAMC,mBAAmB,GAAIH,KAAK,IAAK;IACrCF,UAAU,CAACE,KAAK,CAACC,MAAM,CAACG,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,aAAa,GAAGX,KAAK,CAACY,MAAM,CAAEC,IAAI,IAAK;IAC3C,IAAIC,WAAW,GAAG,IAAI;IACtB,IAAIC,gBAAgB,GAAG,IAAI;IAE3B,IAAId,SAAS,EAAE;MACba,WAAW,GAAGD,IAAI,CAACZ,SAAS,KAAKA,SAAS;IAC5C;IAEA,IAAIE,OAAO,EAAE;MACXY,gBAAgB,GAAGF,IAAI,CAACV,OAAO,KAAKA,OAAO;IAC7C;IAEA,OAAOW,WAAW,IAAIC,gBAAgB;EACxC,CAAC,CAAC;EAEF,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAClB;MAAA,wBACE;QAAA,sCAEE;UAAO,IAAI,EAAC,UAAU;UAAC,OAAO,EAAEd,SAAU;UAAC,QAAQ,EAAEI;QAAuB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACzE,eACR;QAAA,qCAEE;UAAO,IAAI,EAAC,MAAM;UAAC,KAAK,EAAEF,OAAQ;UAAC,QAAQ,EAAEM;QAAoB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9D;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAA,UACGE,aAAa,CAACK,GAAG,CAAEH,IAAI,iBACtB,QAAC,UAAU;QAAe,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA,QACzB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAC,GA/CIlB,QAAQ;AAAA,KAARA,QAAQ;AAiDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}