{"ast":null,"code":"var _jsxFileName = \"/home/elvis/phase3/my-app-frontend/src/modals/EditTask.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTask = _ref => {\n  _s();\n  let {\n    modal,\n    loggedIn,\n    handleNewPost,\n    toggle,\n    taskObj\n  } = _ref;\n  const [form, setForm] = useState({\n    category: \"\",\n    todos: \"\",\n    dueDate: \"\"\n  });\n  useEffect(() => {\n    if (taskObj) {\n      setForm({\n        category: taskObj.category,\n        todos: taskObj.todos,\n        dueDate: taskObj.dueDate\n      });\n    } else {\n      const today = new Date().toISOString().slice(0, 10);\n      setForm({\n        ...form,\n        dueDate: today\n      });\n    }\n  }, [taskObj]);\n  const handleUpdate = e => {\n    fetch(`http://localhost:9293/users/${loggedIn.id}/tasks/${taskObj.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    });\n    handleNewPost();\n    toggle();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: [\"Update Task - \", form.dueDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: form.category,\n          onChange: e => setForm({\n            ...form,\n            category: e.target.value\n          }),\n          name: \"categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Task Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          className: \"form-control\",\n          value: form.todos,\n          onChange: e => setForm({\n            ...form,\n            todos: e.target.value\n          }),\n          name: \"todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Due\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\",\n          value: form.dueDate,\n          onChange: e => setForm({\n            ...form,\n            dueDate: e.target.value\n          }),\n          name: \"dueDate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: toggle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"info\",\n        onClick: handleView,\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n_s(EditTask, \"ycx3T32+zLOUnqkGhL88JtI7Z9E=\");\n_c = EditTask;\nexport default EditTask;\nvar _c;\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","useEffect","useState","EditTask","modal","loggedIn","handleNewPost","toggle","taskObj","form","setForm","category","todos","dueDate","today","Date","toISOString","slice","handleUpdate","e","fetch","id","method","headers","body","JSON","stringify","target","value","handleView"],"sources":["/home/elvis/phase3/my-app-frontend/src/modals/EditTask.js"],"sourcesContent":["import React from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst EditTask = ({ modal, loggedIn, handleNewPost, toggle, taskObj }) => {\n    const [form, setForm] = useState({\n      category: \"\",\n      todos: \"\",\n      dueDate: \"\"\n    });\n  \n    useEffect(() => {\n      if (taskObj) {\n        setForm({\n          category: taskObj.category,\n          todos: taskObj.todos,\n          dueDate: taskObj.dueDate\n        });\n      } else {\n        const today = new Date().toISOString().slice(0, 10);\n        setForm({ ...form, dueDate: today });\n      }\n    }, [taskObj]);\n  \n    const handleUpdate = (e) => {\n      fetch(\n        `http://localhost:9293/users/${loggedIn.id}/tasks/${taskObj.id}`,\n        {\n          method: \"PATCH\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(form)\n        }\n      );\n      handleNewPost();\n      toggle();\n    };\n  \n    return (\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Update Task - {form.dueDate}</ModalHeader>\n        <ModalBody>\n          <div className=\"form-group\">\n            <label>Task Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={form.category}\n              onChange={(e) =>\n                setForm({ ...form, category: e.target.value })\n              }\n              name=\"categories\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label> Task Description</label>\n            <textarea\n              rows=\"5\"\n              className=\"form-control\"\n              value={form.todos}\n              onChange={(e) => setForm({ ...form, todos: e.target.value })}\n              name=\"todos\"\n            ></textarea>\n          </div>\n          <div className=\"form-group\">\n            <label>Due</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              value={form.dueDate}\n              onChange={(e) =>\n                setForm({ ...form, dueDate: e.target.value })\n              }\n              name=\"dueDate\"\n            />\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={handleUpdate}>\n            Update\n          </Button>{\" \"}\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n          <Button color=\"info\" onClick={handleView}>View</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  };\n\n  export default EditTask"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}