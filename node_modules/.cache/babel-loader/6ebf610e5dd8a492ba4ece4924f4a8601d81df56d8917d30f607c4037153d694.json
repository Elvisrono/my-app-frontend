{"ast":null,"code":"var _jsxFileName = \"/home/elvis/phase3/my-app-frontend/src/components/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = _ref => {\n  _s();\n  let {\n    tasks\n  } = _ref;\n  const [query, setQuery] = useState('');\n  const filteredTasks = tasks.filter(task => task.category.toLowerCase().includes(query.toLowerCase()) || task.todos.toLowerCase().includes(query.toLowerCase()) || task.dueDate.toLowerCase().includes(query.toLowerCase()) || (task.completed ? 'completed' : 'not completed').toLowerCase().includes(query.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Search tasks...\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), filteredTasks.map(task => /*#__PURE__*/_jsxDEV(Card, {\n      taskObj: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"qO/HZodsWTfJhuzZtdaxiosei2U=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Card","Search","tasks","query","setQuery","filteredTasks","filter","task","category","toLowerCase","includes","todos","dueDate","completed","e","target","value","map","id"],"sources":["/home/elvis/phase3/my-app-frontend/src/components/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from './Card';\n\nconst Search = ({ tasks }) => {\n  const [query, setQuery] = useState('');\n\n  const filteredTasks = tasks.filter(\n    (task) =>\n      task.category.toLowerCase().includes(query.toLowerCase()) ||\n      task.todos.toLowerCase().includes(query.toLowerCase()) ||\n      task.dueDate.toLowerCase().includes(query.toLowerCase()) ||\n      (task.completed ? 'completed' : 'not completed').toLowerCase().includes(query.toLowerCase())\n  );\n\n  return (\n    <div>\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          className=\"search-input\"\n          placeholder=\"Search tasks...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n      </div>\n      {filteredTasks.map((task) => (\n        <Card key={task.id} taskObj={task} />\n      ))}\n    </div>\n  );\n};\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,MAAMC,MAAM,GAAG,QAAe;EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMM,aAAa,GAAGH,KAAK,CAACI,MAAM,CAC/BC,IAAI,IACHA,IAAI,CAACC,QAAQ,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,KAAK,CAACM,WAAW,EAAE,CAAC,IACzDF,IAAI,CAACI,KAAK,CAACF,WAAW,EAAE,CAACC,QAAQ,CAACP,KAAK,CAACM,WAAW,EAAE,CAAC,IACtDF,IAAI,CAACK,OAAO,CAACH,WAAW,EAAE,CAACC,QAAQ,CAACP,KAAK,CAACM,WAAW,EAAE,CAAC,IACxD,CAACF,IAAI,CAACM,SAAS,GAAG,WAAW,GAAG,eAAe,EAAEJ,WAAW,EAAE,CAACC,QAAQ,CAACP,KAAK,CAACM,WAAW,EAAE,CAAC,CAC/F;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,kBAAkB;MAAA,uBAC/B;QACE,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,cAAc;QACxB,WAAW,EAAC,iBAAiB;QAC7B,KAAK,EAAEN,KAAM;QACb,QAAQ,EAAGW,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IAC1C;MAAA;MAAA;MAAA;IAAA,QACE,EACLX,aAAa,CAACY,GAAG,CAAEV,IAAI,iBACtB,QAAC,IAAI;MAAe,OAAO,EAAEA;IAAK,GAAvBA,IAAI,CAACW,EAAE;MAAA;MAAA;MAAA;IAAA,QACnB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA3BIjB,MAAM;AAAA,KAANA,MAAM;AA6BZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}