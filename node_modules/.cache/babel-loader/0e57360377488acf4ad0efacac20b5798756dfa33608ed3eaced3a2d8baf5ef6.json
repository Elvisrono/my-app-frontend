{"ast":null,"code":"var _jsxFileName = \"/home/elvis/phase3/my-app-frontend/src/modals/CreateTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTask = _ref => {\n  _s();\n  let {\n    modal,\n    toggle,\n    loggedIn,\n    handleNewPost\n  } = _ref;\n  const [form, setForm] = useState({\n    category: '',\n    todos: '',\n    dueDate: '',\n    completed: false\n  });\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleNewPost(description, dueDate);\n    setDescription('');\n    setDueDate('');\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const handleSave = e => {\n    e.preventDefault();\n    fetch(`http://localhost:9293/users/${loggedIn.id}/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    }).then(response => response.json()).then(data => {\n      handleNewPost();\n      toggle();\n      setForm({\n        category: '',\n        todos: '',\n        dueDate: '',\n        completed: false\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: [\" Create Task - Due Date: \", form.dueDate, \" | status: \", form.completed ? \"Yes\" : \"No\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: form.category,\n            onChange: e => setForm({\n              ...form,\n              category: e.target.value\n            }),\n            name: \"category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"5\",\n            className: \"form-control\",\n            value: form.todos,\n            onChange: e => setForm({\n              ...form,\n              todos: e.target.value\n            }),\n            name: \"todos\",\n            children: form.todos.split(\"\\n\").map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 11\n              }, this), task]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Due-Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            value: form.dueDate,\n            onChange: e => setForm({\n              ...form,\n              dueDate: e.target.value\n            }),\n            name: \"dueDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"completed\",\n            className: \"form-control\",\n            value: form.completed,\n            onChange: handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: false,\n              children: \"Not Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: true,\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleSave,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: toggle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTask, \"g2bdC/BGCuiD7Swv8o5vrz+ot3w=\");\n_c = CreateTask;\nexport default CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","CreateTask","modal","toggle","loggedIn","handleNewPost","form","setForm","category","todos","dueDate","completed","description","setDescription","setDueDate","handleSubmit","event","preventDefault","handleInputChange","name","value","target","handleSave","e","fetch","id","method","headers","body","JSON","stringify","then","response","json","data","split","map","task","index"],"sources":["/home/elvis/phase3/my-app-frontend/src/modals/CreateTask.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst CreateTask = ({ modal, toggle, loggedIn, handleNewPost }) => {\n  const [form, setForm] = useState({\n    category: '',\n    todos: '',\n    dueDate: '',\n    completed: false,\n    \n  });\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    handleNewPost(description, dueDate);\n    setDescription('');\n    setDueDate('');\n  };\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setForm({ ...form, [name]: value });\n  };\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:9293/users/${loggedIn.id}/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(form),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        handleNewPost();\n        toggle();\n        setForm({\n          category: '',\n          todos: '',\n          dueDate: '',\n          completed: false,\n        });\n      });\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={toggle}>\n      <ModalHeader toggle={toggle}> Create Task - Due Date: {form.dueDate} | status: {form.completed ? \"Yes\" : \"No\"}</ModalHeader>\n      <ModalBody>\n        <form>\n          <div className=\"form-group\">\n            <label>Category</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={form.category}\n              onChange={(e) =>\n                setForm({ ...form, category: e.target.value })\n              }\n              name=\"category\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Tasks</label>\n            <textarea\n                 rows=\"5\"\n                className=\"form-control\"\n                value={form.todos}\n                onChange={(e) => setForm({ ...form, todos: e.target.value })}\n                name=\"todos\"\n            >\n          {form.todos.split(\"\\n\").map((task, index) => (\n          <div key={index}>\n          <input type=\"checkbox\" />\n          {task}\n        </div>\n  ))}\n</textarea>\n\n          </div>\n          <div className=\"form-group\">\n            <label>Due-Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              value={form.dueDate}\n              onChange={(e) =>\n                setForm({ ...form, dueDate: e.target.value })\n              }\n              name=\"dueDate\"\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Status</label>\n            <select\n              name=\"completed\"\n              className=\"form-control\"\n              value={form.completed}\n              onChange={handleInputChange}\n            >\n              <option value={false}>Not Completed</option>\n              <option value={true}>Completed</option>\n            </select>\n          </div>\n        </form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={handleSave}>\n          Create\n        </Button>{' '}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default CreateTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}