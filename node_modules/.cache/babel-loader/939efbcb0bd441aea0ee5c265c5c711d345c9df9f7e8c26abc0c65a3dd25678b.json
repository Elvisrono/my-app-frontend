{"ast":null,"code":"var _jsxFileName = \"/home/elvis/phase3/my-app-frontend/src/components/Search.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search(_ref) {\n  var _this = this;\n  let {\n    searchFunction\n  } = _ref;\n  return function (searchFunction) {\n    async function searchFunction(searchTerms) {\n      try {\n        const response = await fetch(`http://localhost:9293/users/${loggedIn.id}/tasks`);\n        const data = await response.json();\n        const filteredData = data.filter(item => item.description.includes(searchTerms));\n        searchFunction(filteredData);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    // update state on input change \n    function handleSearch(e) {\n      e.preventDefault();\n      setSearch(e.target.value);\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"formcontrol\",\n        type: \"text\",\n        placeholder: \"Search tasks\",\n        onChange: handleSearch,\n        id: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-info ms-1\",\n        id: \"searchBtn\",\n        children: \"SEARCH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, _this);\n  }(searchFunction);\n}\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","Search","searchFunction","searchTerms","response","fetch","loggedIn","id","data","json","filteredData","filter","item","description","includes","error","console","log","handleSearch","e","preventDefault","setSearch","target","value"],"sources":["/home/elvis/phase3/my-app-frontend/src/components/Search.js"],"sourcesContent":["import React , { useEffect , useState} from \"react\";\n\nfunction Search({searchFunction}) {\n\n\n  async function searchFunction(searchTerms) {\n    try {\n      const response = await fetch(`http://localhost:9293/users/${loggedIn.id}/tasks`);\n      const data = await response.json();\n      const filteredData = data.filter(item => item.description.includes(searchTerms));\n      searchFunction(filteredData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  \n\n  // update state on input change \n  function handleSearch(e){\n    e.preventDefault();\n    setSearch(e.target.value);\n  }\n  return (\n    <form className=\"d-flex\">\n    <input className=\"formcontrol\"\n    type=\"text\" placeholder=\"Search tasks\" onChange={handleSearch}\n    id=\"search\"/>\n    <button className=\"btn btn-outline-info ms-1\"\n        id= \"searchBtn\">SEARCH</button>\n        \n</form>\n  \n  );\n}\n\nexport default Search;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAKC,SAAS,EAAGC,QAAQ,QAAO,OAAO;AAAC;AAEpD,SAASC,MAAM;EAAA;EAAA,IAAC;IAACC;EAAc,CAAC;EAAA,iCAAE;IAGhC,eAAeA,cAAc,CAACC,WAAW,EAAE;MACzC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BC,QAAQ,CAACC,EAAG,QAAO,CAAC;QAChF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAClC,MAAMC,YAAY,GAAGF,IAAI,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,WAAW,CAACC,QAAQ,CAACX,WAAW,CAAC,CAAC;QAChFD,cAAc,CAACQ,YAAY,CAAC;MAC9B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF;;IAGA;IACA,SAASG,YAAY,CAACC,CAAC,EAAC;MACtBA,CAAC,CAACC,cAAc,EAAE;MAClBC,SAAS,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC3B;IACA,oBACE;MAAM,SAAS,EAAC,QAAQ;MAAA,wBACxB;QAAO,SAAS,EAAC,aAAa;QAC9B,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,cAAc;QAAC,QAAQ,EAAEL,YAAa;QAC9D,EAAE,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,SAAE,eACb;QAAQ,SAAS,EAAC,2BAA2B;QACzC,EAAE,EAAE,WAAW;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,SAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,SAEhC;EAGP,CAAC;AAAA;AAAA,KA/BQjB,MAAM;AAiCf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}