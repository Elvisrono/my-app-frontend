{"ast":null,"code":"var _jsxFileName = \"/home/elvis/phase3/my-app-frontend/src/modals/CreateTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTask = _ref => {\n  _s();\n  let {\n    modal,\n    toggle,\n    loggedIn,\n    handleNewPost\n  } = _ref;\n  const [form, setForm] = useState({\n    category: \"\",\n    todos: \"\",\n    dueDate: \"\"\n  });\n\n  // description is category and tasklist is task details\n\n  //handleSave fcn will push taskObj in taskList array\n  const handleSave = e => {\n    e.preventDefault();\n    fetch(`http://localhost:9293/users/${loggedIn.id}/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    }).then(response => response.json()).then(data => {\n      handleNewPost();\n      toggle();\n      setForm({\n        category: \"\",\n        todos: \"\",\n        dueDate: \"\"\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: [\"Create Task - \", form.dueDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: form.category,\n            onChange: e => setForm({\n              ...form,\n              category: e.target.value\n            }),\n            name: \"taskName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"5\",\n            className: \"form-control\",\n            value: form.todos,\n            onChange: e => setForm({\n              ...form,\n              todos: e.target.value\n            }),\n            name: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Due-Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            value: form.dueDate,\n            onChange: e => setForm({\n              ...form,\n              dueDate: e.target.value\n            }),\n            name: \"dueDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleSave,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: toggle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateTask, \"QAoYAiMPyLeMtbswYloCYUng4cQ=\");\n_c = CreateTask;\nexport default CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","CreateTask","modal","toggle","loggedIn","handleNewPost","form","setForm","category","todos","dueDate","handleSave","e","preventDefault","fetch","id","method","headers","body","JSON","stringify","then","response","json","data","target","value"],"sources":["/home/elvis/phase3/my-app-frontend/src/modals/CreateTask.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst CreateTask = ({modal, toggle, loggedIn, handleNewPost}) => {\n    \n\n    const [form, setForm] = useState(\n        {\n            category: \"\",\n            todos: \"\",\n            dueDate: \"\"\n            \n        }\n    )\n    \n    // description is category and tasklist is task details\n    \n   \n     //handleSave fcn will push taskObj in taskList array\n     const handleSave =  (e) => {\n        e.preventDefault()\n        fetch(`http://localhost:9293/users/${loggedIn.id}/tasks`, {\n            method: 'POST',\n            headers: {\n                'Content-type':'application/json'\n            },\n            body: JSON.stringify(form)\n        })\n        .then(response => response.json())\n        .then(data => {\n            handleNewPost();\n            toggle();\n            setForm({\n                category: \"\",\n                todos: \"\",\n                dueDate: \"\"\n              });\n        })\n            \n    }\n\n \n    return (\n        \n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Create Task - {form.dueDate}</ModalHeader>\n\n            <ModalBody>\n            \n                    <form>\n                        <div className='form-group'>\n                            <label>Category</label>\n                            <input type=\"text\" className='form-control' value={form.category} onChange={(e) => setForm({...form, category:e.target.value})} name=\"taskName\"/>\n                        </div>\n                        <div className='form-group'>\n                            <label>Tasks</label>\n                            <textarea rows=\"5\" className='form-control' value={form.todos} onChange={(e) => setForm({...form, todos:e.target.value})} name =\"description\"></textarea>\n                        </div>\n                        <div className='form-group'>\n                            <label>Due-Date</label>\n                            <input type=\"date\" className='form-control' value={form.dueDate} onChange={(e) => setForm({...form, dueDate:e.target.value})} name=\"dueDate\"></input>\n                        </div>\n                    </form>     \n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"primary\" onClick={handleSave}>Create</Button>{' '}\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n      </Modal>\n    );\n};\n\nexport default CreateTask;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,YAAY;AAAC;AAEhF,MAAMC,UAAU,GAAG,QAA8C;EAAA;EAAA,IAA7C;IAACC,KAAK;IAAEC,MAAM;IAAEC,QAAQ;IAAEC;EAAa,CAAC;EAGxD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAC5B;IACIa,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EAEb,CAAC,CACJ;;EAED;;EAGC;EACA,MAAMC,UAAU,GAAKC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClBC,KAAK,CAAE,+BAA8BV,QAAQ,CAACW,EAAG,QAAO,EAAE;MACtDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAC;MACnB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,IAAI;IAC7B,CAAC,CAAC,CACDe,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVnB,aAAa,EAAE;MACfF,MAAM,EAAE;MACRI,OAAO,CAAC;QACJC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACX,CAAC,CAAC;IACR,CAAC,CAAC;EAEN,CAAC;EAGD,oBAEI,QAAC,KAAK;IAAC,MAAM,EAAER,KAAM;IAAC,MAAM,EAAEC,MAAO;IAAA,wBACjC,QAAC,WAAW;MAAC,MAAM,EAAEA,MAAO;MAAA,6BAAgBG,IAAI,CAACI,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eAEvE,QAAC,SAAS;MAAA,uBAEF;QAAA,wBACI;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAuB,eACvB;YAAO,IAAI,EAAC,MAAM;YAAC,SAAS,EAAC,cAAc;YAAC,KAAK,EAAEJ,IAAI,CAACE,QAAS;YAAC,QAAQ,EAAGI,CAAC,IAAKL,OAAO,CAAC;cAAC,GAAGD,IAAI;cAAEE,QAAQ,EAACI,CAAC,CAACa,MAAM,CAACC;YAAK,CAAC,CAAE;YAAC,IAAI,EAAC;UAAU;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QAC/I,eACN;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAoB,eACpB;YAAU,IAAI,EAAC,GAAG;YAAC,SAAS,EAAC,cAAc;YAAC,KAAK,EAAEpB,IAAI,CAACG,KAAM;YAAC,QAAQ,EAAGG,CAAC,IAAKL,OAAO,CAAC;cAAC,GAAGD,IAAI;cAAEG,KAAK,EAACG,CAAC,CAACa,MAAM,CAACC;YAAK,CAAC,CAAE;YAAC,IAAI,EAAE;UAAa;YAAA;YAAA;YAAA;UAAA,QAAY;QAAA;UAAA;UAAA;UAAA;QAAA,QACvJ,eACN;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAuB,eACvB;YAAO,IAAI,EAAC,MAAM;YAAC,SAAS,EAAC,cAAc;YAAC,KAAK,EAAEpB,IAAI,CAACI,OAAQ;YAAC,QAAQ,EAAGE,CAAC,IAAKL,OAAO,CAAC;cAAC,GAAGD,IAAI;cAAEI,OAAO,EAACE,CAAC,CAACa,MAAM,CAACC;YAAK,CAAC,CAAE;YAAC,IAAI,EAAC;UAAS;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACnJ;MAAA;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QACH,eACZ,QAAC,WAAW;MAAA,wBACZ,QAAC,MAAM;QAAC,KAAK,EAAC,SAAS;QAAC,OAAO,EAAEf,UAAW;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,EAAC,GAAG,eAChE,QAAC,MAAM;QAAC,KAAK,EAAC,WAAW;QAAC,OAAO,EAAER,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5C;EAAA;IAAA;IAAA;IAAA;EAAA,QACZ;AAEd,CAAC;AAAC,GAnEIF,UAAU;AAAA,KAAVA,UAAU;AAqEhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}