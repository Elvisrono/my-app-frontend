{"ast":null,"code":"var _jsxFileName = \"/home/elvis/phase3/my-app-frontend/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport React, { useEffect } from 'react';\nimport CreateTask from '../modals/CreateTask';\nimport { useState } from 'react';\nimport Card from './Card';\nimport Search from './Search';\nimport \"../components/signup.css\";\nimport \"../components/todolist.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDoList = _ref => {\n  _s();\n  let {\n    tasks,\n    loggedIn,\n    deleteTask,\n    handleNewPost,\n    toggle\n  } = _ref;\n  const [modal, setModal] = useState(false);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  async function searchFunction(searchTerms) {\n    try {\n      const response = await fetch(`http://localhost:9293/users/${loggedIn.id}/tasks`);\n      const data = await response.json();\n      const filteredData = data.filter(item => item.description.includes(searchTerms));\n      setFilteredTasks(filteredData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    setFilteredTasks(tasks);\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TASK MANAGER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        searchFunction: searchFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2\",\n        onClick: () => setModal(true),\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout-form\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"logout\",\n          href: \"/\",\n          children: \"LogOut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: (filteredTasks.length > 0 ? filteredTasks : tasks).map(obj => /*#__PURE__*/_jsxDEV(Card, {\n        taskObj: obj,\n        handleNewPost: handleNewPost,\n        loggedIn: loggedIn,\n        deleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTask, {\n      toggle: toggle,\n      handleNewPost: handleNewPost,\n      modal: modal,\n      loggedIn: loggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ToDoList, \"llhvgUU9wEzxWrJ6KhQXiL6qCLQ=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["useNavigate","React","useEffect","CreateTask","useState","Card","Search","ToDoList","tasks","loggedIn","deleteTask","handleNewPost","toggle","modal","setModal","filteredTasks","setFilteredTasks","searchFunction","searchTerms","response","fetch","id","data","json","filteredData","filter","item","description","includes","error","console","log","length","map","obj"],"sources":["/home/elvis/phase3/my-app-frontend/src/components/ToDoList.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport React, { useEffect } from 'react';\nimport CreateTask from '../modals/CreateTask';\nimport { useState } from 'react';\nimport Card from './Card';\nimport Search from './Search';\nimport \"../components/signup.css\";\nimport \"../components/todolist.css\"\n\nconst ToDoList = ({ tasks, loggedIn, deleteTask, handleNewPost, toggle}) => {\n  const [modal, setModal] = useState(false);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  async function searchFunction(searchTerms) {\n    try {\n      const response = await fetch(`http://localhost:9293/users/${loggedIn.id}/tasks`);\n      const data = await response.json();\n      const filteredData = data.filter(item => item.description.includes(searchTerms));\n      setFilteredTasks(filteredData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    setFilteredTasks(tasks);\n  }, [tasks]);\n\n  return (\n    <>\n      <div className='header text-center'>\n        <h1>TASK MANAGER</h1>\n        <form></form>\n        <Search searchFunction={searchFunction} />\n        <button className=\"btn btn-primary mt-2\" onClick={()=> setModal(true)}>Create Task</button>\n        <div className = \"logout-form\">\n          <a id='logout' href='/'>LogOut</a>\n        </div>\n      </div>\n\n      <div className='task-container'>\n        {(filteredTasks.length > 0 ? filteredTasks : tasks).map((obj) => (\n          <Card taskObj={obj} handleNewPost={handleNewPost} loggedIn={loggedIn} deleteTask={deleteTask} />\n        ))}\n      </div>\n\n      <CreateTask toggle ={toggle} handleNewPost={handleNewPost} modal={modal} loggedIn={loggedIn}/>\n    </>\n  );\n};\n\n\n\nexport default ToDoList;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,0BAA0B;AACjC,OAAO,4BAA4B;AAAA;AAAA;AAEnC,MAAMC,QAAQ,GAAG,QAA2D;EAAA;EAAA,IAA1D;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,aAAa;IAAEC;EAAM,CAAC;EACrE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtD,eAAea,cAAc,CAACC,WAAW,EAAE;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BX,QAAQ,CAACY,EAAG,QAAO,CAAC;MAChF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;MAClC,MAAMC,YAAY,GAAGF,IAAI,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,WAAW,CAACC,QAAQ,CAACV,WAAW,CAAC,CAAC;MAChFF,gBAAgB,CAACQ,YAAY,CAAC;IAChC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF;EAEA3B,SAAS,CAAC,MAAM;IACdc,gBAAgB,CAACR,KAAK,CAAC;EACzB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,oBAAoB;MAAA,wBACjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eACrB;QAAA;QAAA;QAAA;MAAA,QAAa,eACb,QAAC,MAAM;QAAC,cAAc,EAAES;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1C;QAAQ,SAAS,EAAC,sBAAsB;QAAC,OAAO,EAAE,MAAKH,QAAQ,CAAC,IAAI,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eAC3F;QAAK,SAAS,EAAG,aAAa;QAAA,uBAC5B;UAAG,EAAE,EAAC,QAAQ;UAAC,IAAI,EAAC,GAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAW;QAAA;QAAA;QAAA;MAAA,QAC9B;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eAEN;MAAK,SAAS,EAAC,gBAAgB;MAAA,UAC5B,CAACC,aAAa,CAACiB,MAAM,GAAG,CAAC,GAAGjB,aAAa,GAAGP,KAAK,EAAEyB,GAAG,CAAEC,GAAG,iBAC1D,QAAC,IAAI;QAAC,OAAO,EAAEA,GAAI;QAAC,aAAa,EAAEvB,aAAc;QAAC,QAAQ,EAAEF,QAAS;QAAC,UAAU,EAAEC;MAAW;QAAA;QAAA;QAAA;MAAA,QAC9F;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eAEN,QAAC,UAAU;MAAC,MAAM,EAAGE,MAAO;MAAC,aAAa,EAAED,aAAc;MAAC,KAAK,EAAEE,KAAM;MAAC,QAAQ,EAAEJ;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBAC7F;AAEP,CAAC;AAAC,GAxCIF,QAAQ;AAAA,KAARA,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}