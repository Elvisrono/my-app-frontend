{"ast":null,"code":"var _jsxFileName = \"/home/elvis/phase3/my-app-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport ToDoList from './components/ToDoList';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport CreateTask from './modals/CreateTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState({});\n  const [tasks, setTasks] = useState([]);\n  const [post, setPosts] = useState(true);\n  const addNewUser = newUser => setLoggedIn(newUser);\n  useEffect(() => {\n    fetch(`http://localhost:9293/users/${loggedIn.id}/tasks`).then(r => r.json()).then(tasksarr => {\n      console.log(tasksarr);\n      setTasks(tasksarr);\n    });\n  }, [loggedIn, post]);\n  const deleteTask = id => {\n    const newTasks = tasks.filter(task => task.id !== id);\n    setTasks(newTasks);\n  };\n  function handleNewPost() {\n    setPosts(post => !post);\n  }\n  const [search, setSearch] = React.useState('');\n  const filterCreateTask = tasks.filter(CreateTask => {\n    return CreateTask.descrition.toLowerCase().includes(search.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        projects: projects,\n        search: search,\n        setSearch: setSearch,\n        fetchProjects: fetchProjects,\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          element: /*#__PURE__*/_jsxDEV(ToDoList, {\n            tasks: tasks,\n            loggedIn: loggedIn,\n            deleteTask: deleteTask,\n            handleNewPost: handleNewPost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users/new\",\n          element: /*#__PURE__*/_jsxDEV(Signup, {\n            addNewUser: addNewUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setLoggedIn: setLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RMHQ32JTuJ+0WX6VatMr+i2Gkro=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Routes","Route","ToDoList","Signup","Login","CreateTask","App","loggedIn","setLoggedIn","tasks","setTasks","post","setPosts","addNewUser","newUser","fetch","id","then","r","json","tasksarr","console","log","deleteTask","newTasks","filter","task","handleNewPost","search","setSearch","React","filterCreateTask","descrition","toLowerCase","includes","projects","fetchProjects"],"sources":["/home/elvis/phase3/my-app-frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { useEffect, useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport ToDoList from './components/ToDoList';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport CreateTask from './modals/CreateTask';\n\n\n\n\nfunction App() {\n\n  const [loggedIn, setLoggedIn] = useState({})\n  const [tasks, setTasks] = useState([])\n  const [post, setPosts] = useState(true)\n\n  const addNewUser = (newUser) => setLoggedIn(newUser);\n\n\n  useEffect(() => {\n    fetch(`http://localhost:9293/users/${loggedIn.id}/tasks`)\n    .then(r => r.json())\n    .then( (tasksarr) => {\n      console.log(tasksarr)\n      setTasks(tasksarr)\n    })\n    }, [loggedIn, post])\n\n    const deleteTask = (id) => {\n        const newTasks = tasks.filter(task => task.id !== id)\n        setTasks(newTasks)\n    }\n\n    function handleNewPost() {\n      setPosts((post) => !post)\n    }\n    const [search, setSearch] = React.useState('')\n  const filterCreateTask = tasks.filter((CreateTask) => {\n    return CreateTask.descrition.toLowerCase().includes(search.toLowerCase())\n  })\n\n\n  return (\n    <div className=\"App\">\n      <Routes>\n      <Layout\n            projects={projects}\n            search={search}\n            setSearch={setSearch}\n            fetchProjects={fetchProjects}>\n          <Route path='/home' element= {<ToDoList tasks={tasks} loggedIn={loggedIn} deleteTask={deleteTask} handleNewPost={handleNewPost}/>}/> \n          <Route path='/users/new' element = {<Signup addNewUser={addNewUser}/>}/>\n          <Route path='/' element = { <Login setLoggedIn={setLoggedIn} />}/>\n          </Layout>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAE7C,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,qBAAqB;AAAC;AAK7C,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEvC,MAAMc,UAAU,GAAIC,OAAO,IAAKN,WAAW,CAACM,OAAO,CAAC;EAGpDhB,SAAS,CAAC,MAAM;IACdiB,KAAK,CAAE,+BAA8BR,QAAQ,CAACS,EAAG,QAAO,CAAC,CACxDC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE,CAAC,CACnBF,IAAI,CAAGG,QAAQ,IAAK;MACnBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBV,QAAQ,CAACU,QAAQ,CAAC;IACpB,CAAC,CAAC;EACF,CAAC,EAAE,CAACb,QAAQ,EAAEI,IAAI,CAAC,CAAC;EAEpB,MAAMY,UAAU,GAAIP,EAAE,IAAK;IACvB,MAAMQ,QAAQ,GAAGf,KAAK,CAACgB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACV,EAAE,KAAKA,EAAE,CAAC;IACrDN,QAAQ,CAACc,QAAQ,CAAC;EACtB,CAAC;EAED,SAASG,aAAa,GAAG;IACvBf,QAAQ,CAAED,IAAI,IAAK,CAACA,IAAI,CAAC;EAC3B;EACA,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGC,KAAK,CAAC/B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMgC,gBAAgB,GAAGtB,KAAK,CAACgB,MAAM,CAAEpB,UAAU,IAAK;IACpD,OAAOA,UAAU,CAAC2B,UAAU,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACN,MAAM,CAACK,WAAW,EAAE,CAAC;EAC3E,CAAC,CAAC;EAGF,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,MAAM;MAAA,uBACP,QAAC,MAAM;QACD,QAAQ,EAAEE,QAAS;QACnB,MAAM,EAAEP,MAAO;QACf,SAAS,EAAEC,SAAU;QACrB,aAAa,EAAEO,aAAc;QAAA,wBAC/B,QAAC,KAAK;UAAC,IAAI,EAAC,OAAO;UAAC,OAAO,eAAG,QAAC,QAAQ;YAAC,KAAK,EAAE3B,KAAM;YAAC,QAAQ,EAAEF,QAAS;YAAC,UAAU,EAAEgB,UAAW;YAAC,aAAa,EAAEI;UAAc;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAAE,eACpI,QAAC,KAAK;UAAC,IAAI,EAAC,YAAY;UAAC,OAAO,eAAI,QAAC,MAAM;YAAC,UAAU,EAAEd;UAAW;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAAE,eACxE,QAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,OAAO,eAAK,QAAC,KAAK;YAAC,WAAW,EAAEL;UAAY;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA;IACzD;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GA/CQF,GAAG;AAAA,KAAHA,GAAG;AAiDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}