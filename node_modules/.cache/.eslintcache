[{"/home/elvis/phase3/my-app-frontend/src/index.js":"1","/home/elvis/phase3/my-app-frontend/src/App.js":"2","/home/elvis/phase3/my-app-frontend/src/reportWebVitals.js":"3","/home/elvis/phase3/my-app-frontend/src/components/ToDoList.js":"4","/home/elvis/phase3/my-app-frontend/src/components/Login.js":"5","/home/elvis/phase3/my-app-frontend/src/components/Signup.js":"6","/home/elvis/phase3/my-app-frontend/src/components/Card.js":"7","/home/elvis/phase3/my-app-frontend/src/modals/CreateTask.js":"8","/home/elvis/phase3/my-app-frontend/src/modals/EditTask.js":"9","/home/elvis/phase3/my-app-frontend/src/components/Search.js":"10"},{"size":626,"mtime":1668398802000,"results":"11","hashOfConfig":"12"},{"size":1607,"mtime":1677960856951,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1668398802000,"results":"14","hashOfConfig":"12"},{"size":1961,"mtime":1677962849541,"results":"15","hashOfConfig":"12"},{"size":2489,"mtime":1677747305422,"results":"16","hashOfConfig":"12"},{"size":3249,"mtime":1677745641158,"results":"17","hashOfConfig":"12"},{"size":2351,"mtime":1677787929163,"results":"18","hashOfConfig":"12"},{"size":3156,"mtime":1677962861353,"results":"19","hashOfConfig":"12"},{"size":2656,"mtime":1677787048690,"results":"20","hashOfConfig":"12"},{"size":1031,"mtime":1677961429625,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"7hl8hv",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"25"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/elvis/phase3/my-app-frontend/src/index.js",[],[],[],"/home/elvis/phase3/my-app-frontend/src/App.js",[],[],"/home/elvis/phase3/my-app-frontend/src/reportWebVitals.js",[],[],"/home/elvis/phase3/my-app-frontend/src/components/ToDoList.js",["54","55","56","57","58"],[],"/home/elvis/phase3/my-app-frontend/src/components/Login.js",[],[],"/home/elvis/phase3/my-app-frontend/src/components/Signup.js",[],[],"/home/elvis/phase3/my-app-frontend/src/components/Card.js",[],[],"/home/elvis/phase3/my-app-frontend/src/modals/CreateTask.js",["59"],[],"/home/elvis/phase3/my-app-frontend/src/modals/EditTask.js",["60"],[],"import React from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst EditTask = ({ modal, loggedIn, handleNewPost, toggle, taskObj, handleView}) => {\n    const [form, setForm] = useState({\n      category: \"\",\n      todos: \"\",\n      dueDate: \"\"\n    });\n  \n    useEffect(() => {\n      if (taskObj) {\n        setForm({\n          category: taskObj.category,\n          todos: taskObj.todos,\n          dueDate: taskObj.dueDate\n        });\n      } else {\n        const today = new Date().toISOString().slice(0, 10);\n        setForm({ ...form, dueDate: today });\n      }\n    }, [taskObj]);\n  \n    const handleUpdate = (e) => {\n      fetch(\n        `http://localhost:9293/users/${loggedIn.id}/tasks/${taskObj.id}`,\n        {\n          method: \"PATCH\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(form)\n        }\n      );\n      handleNewPost();\n      toggle();\n    };\n  \n    return (\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Update Task - {form.dueDate}</ModalHeader>\n        <ModalBody>\n          <div className=\"form-group\">\n            <label>Task Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={form.category}\n              onChange={(e) =>\n                setForm({ ...form, category: e.target.value })\n              }\n              name=\"categories\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label> Task Description</label>\n            <textarea\n              rows=\"5\"\n              className=\"form-control\"\n              value={form.todos}\n              onChange={(e) => setForm({ ...form, todos: e.target.value })}\n              name=\"todos\"\n            ></textarea>\n          </div>\n          <div className=\"form-group\">\n            <label>Due</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              value={form.dueDate}\n              onChange={(e) =>\n                setForm({ ...form, dueDate: e.target.value })\n              }\n              name=\"dueDate\"\n            />\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={handleUpdate}>\n            Update\n          </Button>{\" \"}\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n          <Button color=\"info\" onClick={handleView}>View</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  };\n\n  export default EditTask","/home/elvis/phase3/my-app-frontend/src/components/Search.js",["61"],[],{"ruleId":"62","severity":1,"message":"63","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":21},{"ruleId":"62","severity":1,"message":"66","line":2,"column":17,"nodeType":"64","messageId":"65","endLine":2,"endColumn":26},{"ruleId":"62","severity":1,"message":"67","line":12,"column":12,"nodeType":"64","messageId":"65","endLine":12,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":18,"column":5,"nodeType":"70","messageId":"71","endLine":25,"endColumn":7},{"ruleId":"72","severity":1,"message":"73","line":28,"column":15,"nodeType":"74","messageId":"75","endLine":28,"endColumn":65},{"ruleId":"62","severity":1,"message":"76","line":15,"column":9,"nodeType":"64","messageId":"65","endLine":15,"endColumn":21},{"ruleId":"77","severity":1,"message":"78","line":24,"column":8,"nodeType":"79","endLine":24,"endColumn":17,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":24,"column":6,"nodeType":"79","endLine":24,"endColumn":30,"suggestions":"82"},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'search' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'handleSubmit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array. You can also do a functional update 'setForm(f => ...)' if you only need 'form' in the 'setForm' call.","ArrayExpression",["83"],"React Hook useEffect has a missing dependency: 'loggedIn.id'. Either include it or remove the dependency array.",["84"],{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [form, taskObj]",{"range":"89","text":"90"},"Update the dependencies array to be: [loggedIn.id, search, searchFunction]",{"range":"91","text":"92"},[684,693],"[form, taskObj]",[683,707],"[loggedIn.id, search, searchFunction]"]